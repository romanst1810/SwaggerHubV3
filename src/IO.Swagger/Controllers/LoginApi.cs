/*
 * Calculator API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using Core.Interfaces;
using Core.Models;
using IO.Swagger.Attributes;
using IO.Swagger.Models;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Swashbuckle.AspNetCore.Annotations;

namespace IO.Swagger.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class LoginApiController : ControllerBase
    {
        private readonly IUserService _userService;
        private readonly IConfiguration _config;

        public LoginApiController(IUserService userService, IConfiguration config)
        {
            _userService = userService;
            _config = config;
        }

        /// <summary>
        /// Logs in a user and returns a JWT token
        /// </summary>
        /// <param name="body">Username="Test" , Password="Test" I have just one user for testing</param>
        /// <response code="200">Successful operation</response>

        [AllowAnonymous]
        [HttpPost]
        [Route("/RONAN1810_1/CalculatorV2/1.0.0/api/Login")]
        [ValidateModelState]
        [SwaggerOperation("Login")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Successful operation")]
        public virtual IActionResult Login([FromBody] UserModel body)
        {
            IActionResult response = Unauthorized();
            var user = _userService.AuthenticateUser(body);
            string jwtKey = _config["Jwt:Key"];
            string jwtIssuer = _config["Jwt:Issuer"];
            if (user != null && !string.IsNullOrEmpty(jwtKey) && !string.IsNullOrEmpty(jwtIssuer))
            {
                var tokenString = _userService.GenerateJSONWebToken(user,jwtKey, jwtIssuer);
                response = Ok(new { token = tokenString });
            }

            return response;
        }

       
    }
}