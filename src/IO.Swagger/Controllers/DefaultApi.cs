/*
 * Calculator API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using BL.Services;
using Core.Interfaces;
using Core.Models;
using IO.Swagger.Attributes;
using IO.Swagger.Models;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    {
        private readonly ICalcService _calcService;

        public DefaultApiController(CalcService calcService)
        {
            _calcService = calcService;
        }
        /// <summary>
        /// Perform a calculation
        /// </summary>
        /// <param name="body"></param>
        /// <param name="operation"></param>
        /// <response code="200">Calculation result</response>
        [HttpPost]
        [Route("/RONAN1810_1/CalculatorV2/1.0.0/calculate")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("CalculatePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Calculation result")]
        public virtual IActionResult CalculatePost([FromBody] CalculateBody body,
            [FromHeader][Required()] string operation)
        {
            ResultResponce res = _calcService.GetResult(body.Num1,body.Num2, operation);
           
            if(!string.IsNullOrEmpty(res.Message))
                        return BadRequest(res.Message);
             
            var response = new InlineResponse2001 { Result = res.Result };
            return Ok(response);
        }
    }
}
